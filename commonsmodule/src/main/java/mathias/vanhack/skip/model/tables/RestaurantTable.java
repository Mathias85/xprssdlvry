/*
 * This file is generated by jOOQ.
 */
package mathias.vanhack.skip.model.tables;


import mathias.vanhack.skip.model.definitions.Indexes;
import mathias.vanhack.skip.model.definitions.Keys;
import mathias.vanhack.skip.model.definitions.Xprssdlvrydb;
import mathias.vanhack.skip.model.records.RestaurantRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class RestaurantTable extends TableImpl<RestaurantRecord> {

    private static final long serialVersionUID = -1492623800;

    /**
     * The reference instance of <code>xprssdlvrydb.xd_restaurant</code>
     */
    public static final RestaurantTable XD_RESTAURANT = new RestaurantTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<RestaurantRecord> getRecordType() {
        return RestaurantRecord.class;
    }

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.rest_id</code>.
     */
    public final TableField<RestaurantRecord, Integer> REST_ID = createField("rest_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.name</code>.
     */
    public final TableField<RestaurantRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.description</code>.
     */
    public final TableField<RestaurantRecord, String> DESCRIPTION = createField("description", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.date_created</code>.
     */
    public final TableField<RestaurantRecord, LocalDateTime> DATE_CREATED = createField("date_created", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.street</code>.
     */
    public final TableField<RestaurantRecord, String> STREET = createField("street", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.city</code>.
     */
    public final TableField<RestaurantRecord, String> CITY = createField("city", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.state</code>.
     */
    public final TableField<RestaurantRecord, String> STATE = createField("state", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.country</code>.
     */
    public final TableField<RestaurantRecord, String> COUNTRY = createField("country", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.latitude</code>.
     */
    public final TableField<RestaurantRecord, Integer> LATITUDE = createField("latitude", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>xprssdlvrydb.xd_restaurant.longitude</code>.
     */
    public final TableField<RestaurantRecord, Integer> LONGITUDE = createField("longitude", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * Create a <code>xprssdlvrydb.xd_restaurant</code> table reference
     */
    public RestaurantTable() {
        this(DSL.name("xd_restaurant"), null);
    }

    /**
     * Create an aliased <code>xprssdlvrydb.xd_restaurant</code> table reference
     */
    public RestaurantTable(String alias) {
        this(DSL.name(alias), XD_RESTAURANT);
    }

    /**
     * Create an aliased <code>xprssdlvrydb.xd_restaurant</code> table reference
     */
    public RestaurantTable(Name alias) {
        this(alias, XD_RESTAURANT);
    }

    private RestaurantTable(Name alias, Table<RestaurantRecord> aliased) {
        this(alias, aliased, null);
    }

    private RestaurantTable(Name alias, Table<RestaurantRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> RestaurantTable(Table<O> child, ForeignKey<O, RestaurantRecord> key) {
        super(child, key, XD_RESTAURANT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xprssdlvrydb.XPRSSDLVRYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XD_RESTAURANT_FD_RESTAURANT_REST_ID_UINDEX, Indexes.XD_RESTAURANT_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<RestaurantRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XD_RESTAURANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<RestaurantRecord> getPrimaryKey() {
        return Keys.KEY_XD_RESTAURANT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<RestaurantRecord>> getKeys() {
        return Arrays.<UniqueKey<RestaurantRecord>>asList(Keys.KEY_XD_RESTAURANT_PRIMARY, Keys.KEY_XD_RESTAURANT_FD_RESTAURANT_REST_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestaurantTable as(String alias) {
        return new RestaurantTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public RestaurantTable as(Name alias) {
        return new RestaurantTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public RestaurantTable rename(String name) {
        return new RestaurantTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public RestaurantTable rename(Name name) {
        return new RestaurantTable(name, null);
    }
}
