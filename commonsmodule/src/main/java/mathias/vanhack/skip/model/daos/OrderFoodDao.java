/*
 * This file is generated by jOOQ.
 */
package mathias.vanhack.skip.model.daos;


import mathias.vanhack.skip.model.pojos.OrderFood;
import mathias.vanhack.skip.model.records.OrderFoodRecord;
import mathias.vanhack.skip.model.tables.OrderFoodTable;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class OrderFoodDao extends DAOImpl<OrderFoodRecord, OrderFood, Integer> {

    /**
     * Create a new OrderFoodDao without any configuration
     */
    public OrderFoodDao() {
        super(OrderFoodTable.XD_ORDER_FOOD, OrderFood.class);
    }

    /**
     * Create a new OrderFoodDao with an attached configuration
     */
    @Autowired
    public OrderFoodDao(Configuration configuration) {
        super(OrderFoodTable.XD_ORDER_FOOD, OrderFood.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(OrderFood object) {
        return object.getOrderFoodId();
    }

    /**
     * Fetch records that have <code>order_food_id IN (values)</code>
     */
    public List<OrderFood> fetchByOrderFoodIdTable(Integer... values) {
        return fetch(OrderFoodTable.XD_ORDER_FOOD.ORDER_FOOD_ID, values);
    }

    /**
     * Fetch a unique record that has <code>order_food_id = value</code>
     */
    public OrderFood fetchOneByFoodIdTable(Integer value) {
        return fetchOne(OrderFoodTable.XD_ORDER_FOOD.ORDER_FOOD_ID, value);
    }

    /**
     * Fetch records that have <code>order_id IN (values)</code>
     */
    public List<OrderFood> fetchByOrderIdTable(Integer... values) {
        return fetch(OrderFoodTable.XD_ORDER_FOOD.ORDER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>order_id = value</code>
     */
    public OrderFood fetchOneByIdTable(Integer value) {
        return fetchOne(OrderFoodTable.XD_ORDER_FOOD.ORDER_ID, value);
    }

    /**
     * Fetch records that have <code>food_id IN (values)</code>
     */
    public List<OrderFood> fetchByFoodIdTable(Integer... values) {
        return fetch(OrderFoodTable.XD_ORDER_FOOD.FOOD_ID, values);
    }

    /**
     * Fetch records that have <code>amount IN (values)</code>
     */
    public List<OrderFood> fetchByAmountTable(Integer... values) {
        return fetch(OrderFoodTable.XD_ORDER_FOOD.AMOUNT, values);
    }

    /**
     * Fetch records that have <code>price IN (values)</code>
     */
    public List<OrderFood> fetchByPriceTable(Double... values) {
        return fetch(OrderFoodTable.XD_ORDER_FOOD.PRICE, values);
    }
}
