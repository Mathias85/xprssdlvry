/*
 * This file is generated by jOOQ.
 */
package mathias.vanhack.skip.model.daos;


import mathias.vanhack.skip.model.pojos.Restaurant;
import mathias.vanhack.skip.model.records.RestaurantRecord;
import mathias.vanhack.skip.model.tables.RestaurantTable;
import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import javax.annotation.Generated;
import java.time.LocalDateTime;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
@Repository
public class RestaurantDao extends DAOImpl<RestaurantRecord, Restaurant, Integer> {

    /**
     * Create a new RestaurantDao without any configuration
     */
    public RestaurantDao() {
        super(RestaurantTable.XD_RESTAURANT, Restaurant.class);
    }

    /**
     * Create a new RestaurantDao with an attached configuration
     */
    @Autowired
    public RestaurantDao(Configuration configuration) {
        super(RestaurantTable.XD_RESTAURANT, Restaurant.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Integer getId(Restaurant object) {
        return object.getRestId();
    }

    /**
     * Fetch records that have <code>rest_id IN (values)</code>
     */
    public List<Restaurant> fetchByIdTable(Integer... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.REST_ID, values);
    }

    /**
     * Fetch a unique record that has <code>rest_id = value</code>
     */
    public Restaurant fetchOneByIdTable(Integer value) {
        return fetchOne(RestaurantTable.XD_RESTAURANT.REST_ID, value);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<Restaurant> fetchByNameTable(String... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.NAME, values);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<Restaurant> fetchByDescriptionTable(String... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.DESCRIPTION, values);
    }

    /**
     * Fetch records that have <code>date_created IN (values)</code>
     */
    public List<Restaurant> fetchByCreatedTable(LocalDateTime... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.DATE_CREATED, values);
    }

    /**
     * Fetch records that have <code>street IN (values)</code>
     */
    public List<Restaurant> fetchByStreetTable(String... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.STREET, values);
    }

    /**
     * Fetch records that have <code>city IN (values)</code>
     */
    public List<Restaurant> fetchByCityTable(String... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.CITY, values);
    }

    /**
     * Fetch records that have <code>state IN (values)</code>
     */
    public List<Restaurant> fetchByStateTable(String... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.STATE, values);
    }

    /**
     * Fetch records that have <code>country IN (values)</code>
     */
    public List<Restaurant> fetchByCountryTable(String... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.COUNTRY, values);
    }

    /**
     * Fetch records that have <code>latitude IN (values)</code>
     */
    public List<Restaurant> fetchByLatitudeTable(Integer... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.LATITUDE, values);
    }

    /**
     * Fetch records that have <code>longitude IN (values)</code>
     */
    public List<Restaurant> fetchByLongitudeTable(Integer... values) {
        return fetch(RestaurantTable.XD_RESTAURANT.LONGITUDE, values);
    }
}
