/*
 * This file is generated by jOOQ.
 */
package mathias.vanhack.skip.model.tables;


import mathias.vanhack.skip.model.definitions.Indexes;
import mathias.vanhack.skip.model.definitions.Keys;
import mathias.vanhack.skip.model.definitions.Xprssdlvrydb;
import mathias.vanhack.skip.model.records.OrderFoodRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;

import javax.annotation.Generated;
import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class OrderFoodTable extends TableImpl<OrderFoodRecord> {

    private static final long serialVersionUID = -450628237;

    /**
     * The reference instance of <code>xprssdlvrydb.xd_order_food</code>
     */
    public static final OrderFoodTable XD_ORDER_FOOD = new OrderFoodTable();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<OrderFoodRecord> getRecordType() {
        return OrderFoodRecord.class;
    }

    /**
     * The column <code>xprssdlvrydb.xd_order_food.order_food_id</code>.
     */
    public final TableField<OrderFoodRecord, Integer> ORDER_FOOD_ID = createField("order_food_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_order_food.order_id</code>.
     */
    public final TableField<OrderFoodRecord, Integer> ORDER_ID = createField("order_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_order_food.food_id</code>.
     */
    public final TableField<OrderFoodRecord, Integer> FOOD_ID = createField("food_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_order_food.amount</code>.
     */
    public final TableField<OrderFoodRecord, Integer> AMOUNT = createField("amount", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>xprssdlvrydb.xd_order_food.price</code>.
     */
    public final TableField<OrderFoodRecord, Double> PRICE = createField("price", org.jooq.impl.SQLDataType.DOUBLE.nullable(false), this, "");

    /**
     * Create a <code>xprssdlvrydb.xd_order_food</code> table reference
     */
    public OrderFoodTable() {
        this(DSL.name("xd_order_food"), null);
    }

    /**
     * Create an aliased <code>xprssdlvrydb.xd_order_food</code> table reference
     */
    public OrderFoodTable(String alias) {
        this(DSL.name(alias), XD_ORDER_FOOD);
    }

    /**
     * Create an aliased <code>xprssdlvrydb.xd_order_food</code> table reference
     */
    public OrderFoodTable(Name alias) {
        this(alias, XD_ORDER_FOOD);
    }

    private OrderFoodTable(Name alias, Table<OrderFoodRecord> aliased) {
        this(alias, aliased, null);
    }

    private OrderFoodTable(Name alias, Table<OrderFoodRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Xprssdlvrydb.XPRSSDLVRYDB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.XD_ORDER_FOOD_PRIMARY, Indexes.XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_FOOD_ID_UINDEX, Indexes.XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_ID_UINDEX, Indexes.XD_ORDER_FOOD_XD_ORDER_FOOD_XD_FOOD_FOOD_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<OrderFoodRecord, Integer> getIdentity() {
        return Keys.IDENTITY_XD_ORDER_FOOD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<OrderFoodRecord> getPrimaryKey() {
        return Keys.KEY_XD_ORDER_FOOD_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<OrderFoodRecord>> getKeys() {
        return Arrays.<UniqueKey<OrderFoodRecord>>asList(Keys.KEY_XD_ORDER_FOOD_PRIMARY, Keys.KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_FOOD_ID_UINDEX, Keys.KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_ID_UINDEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<OrderFoodRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<OrderFoodRecord, ?>>asList(Keys.XD_ORDER_FOOD_XD_ORDER_ORDER_ID_FK, Keys.XD_ORDER_FOOD_XD_FOOD_FOOD_ID_FK);
    }

    public OrderTable xdOrder() {
        return new OrderTable(this, Keys.XD_ORDER_FOOD_XD_ORDER_ORDER_ID_FK);
    }

    public FoodTable xdFood() {
        return new FoodTable(this, Keys.XD_ORDER_FOOD_XD_FOOD_FOOD_ID_FK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderFoodTable as(String alias) {
        return new OrderFoodTable(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public OrderFoodTable as(Name alias) {
        return new OrderFoodTable(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderFoodTable rename(String name) {
        return new OrderFoodTable(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public OrderFoodTable rename(Name name) {
        return new OrderFoodTable(name, null);
    }
}
