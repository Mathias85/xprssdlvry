/*
 * This file is generated by jOOQ.
 */
package mathias.vanhack.skip.model.definitions;


import mathias.vanhack.skip.model.records.*;
import mathias.vanhack.skip.model.tables.*;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;

import javax.annotation.Generated;


/**
 * A class modelling foreign key relationships and constraints of tables of
 * the <code>xprssdlvrydb</code> schema.
 */
@Generated(
        value = {
                "http://www.jooq.org",
                "jOOQ version:3.11.0"
        },
        comments = "This class is generated by jOOQ"
)
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<FoodRecord, Integer> IDENTITY_XD_FOOD = Identities0.IDENTITY_XD_FOOD;
    public static final Identity<OrderRecord, Integer> IDENTITY_XD_ORDER = Identities0.IDENTITY_XD_ORDER;
    public static final Identity<OrderFoodRecord, Integer> IDENTITY_XD_ORDER_FOOD = Identities0.IDENTITY_XD_ORDER_FOOD;
    public static final Identity<RestaurantRecord, Integer> IDENTITY_XD_RESTAURANT = Identities0.IDENTITY_XD_RESTAURANT;
    public static final Identity<UserRecord, Integer> IDENTITY_XD_USER = Identities0.IDENTITY_XD_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<FoodRecord> KEY_XD_FOOD_PRIMARY = UniqueKeys0.KEY_XD_FOOD_PRIMARY;
    public static final UniqueKey<FoodRecord> KEY_XD_FOOD_FD_FOOD_FOOD_ID_UINDEX = UniqueKeys0.KEY_XD_FOOD_FD_FOOD_FOOD_ID_UINDEX;
    public static final UniqueKey<OrderRecord> KEY_XD_ORDER_PRIMARY = UniqueKeys0.KEY_XD_ORDER_PRIMARY;
    public static final UniqueKey<OrderRecord> KEY_XD_ORDER_XD_ORDER_ORDER_ID_UINDEX = UniqueKeys0.KEY_XD_ORDER_XD_ORDER_ORDER_ID_UINDEX;
    public static final UniqueKey<OrderFoodRecord> KEY_XD_ORDER_FOOD_PRIMARY = UniqueKeys0.KEY_XD_ORDER_FOOD_PRIMARY;
    public static final UniqueKey<OrderFoodRecord> KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_FOOD_ID_UINDEX = UniqueKeys0.KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_FOOD_ID_UINDEX;
    public static final UniqueKey<OrderFoodRecord> KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_ID_UINDEX = UniqueKeys0.KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_ID_UINDEX;
    public static final UniqueKey<RestaurantRecord> KEY_XD_RESTAURANT_PRIMARY = UniqueKeys0.KEY_XD_RESTAURANT_PRIMARY;
    public static final UniqueKey<RestaurantRecord> KEY_XD_RESTAURANT_FD_RESTAURANT_REST_ID_UINDEX = UniqueKeys0.KEY_XD_RESTAURANT_FD_RESTAURANT_REST_ID_UINDEX;
    public static final UniqueKey<UserRecord> KEY_XD_USER_PRIMARY = UniqueKeys0.KEY_XD_USER_PRIMARY;
    public static final UniqueKey<UserRecord> KEY_XD_USER_XD_USER_USER_ID_UINDEX = UniqueKeys0.KEY_XD_USER_XD_USER_USER_ID_UINDEX;
    public static final UniqueKey<UserRecord> KEY_XD_USER_XD_USER_USERNAME_UINDEX = UniqueKeys0.KEY_XD_USER_XD_USER_USERNAME_UINDEX;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FoodRecord, RestaurantRecord> FD_FOOD_FD_RESTAURANT_REST_ID_FK = ForeignKeys0.FD_FOOD_FD_RESTAURANT_REST_ID_FK;
    public static final ForeignKey<OrderRecord, UserRecord> XD_ORDER_XD_USER_USER_ID_FK = ForeignKeys0.XD_ORDER_XD_USER_USER_ID_FK;
    public static final ForeignKey<OrderRecord, RestaurantRecord> XD_ORDER_XD_RESTAURANT_REST_ID_FK = ForeignKeys0.XD_ORDER_XD_RESTAURANT_REST_ID_FK;
    public static final ForeignKey<OrderFoodRecord, OrderRecord> XD_ORDER_FOOD_XD_ORDER_ORDER_ID_FK = ForeignKeys0.XD_ORDER_FOOD_XD_ORDER_ORDER_ID_FK;
    public static final ForeignKey<OrderFoodRecord, FoodRecord> XD_ORDER_FOOD_XD_FOOD_FOOD_ID_FK = ForeignKeys0.XD_ORDER_FOOD_XD_FOOD_FOOD_ID_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<FoodRecord, Integer> IDENTITY_XD_FOOD = Internal.createIdentity(FoodTable.XD_FOOD, FoodTable.XD_FOOD.FOOD_ID);
        public static Identity<OrderRecord, Integer> IDENTITY_XD_ORDER = Internal.createIdentity(OrderTable.XD_ORDER, OrderTable.XD_ORDER.ORDER_ID);
        public static Identity<OrderFoodRecord, Integer> IDENTITY_XD_ORDER_FOOD = Internal.createIdentity(OrderFoodTable.XD_ORDER_FOOD, OrderFoodTable.XD_ORDER_FOOD.ORDER_FOOD_ID);
        public static Identity<RestaurantRecord, Integer> IDENTITY_XD_RESTAURANT = Internal.createIdentity(RestaurantTable.XD_RESTAURANT, RestaurantTable.XD_RESTAURANT.REST_ID);
        public static Identity<UserRecord, Integer> IDENTITY_XD_USER = Internal.createIdentity(UserTable.XD_USER, UserTable.XD_USER.USER_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<FoodRecord> KEY_XD_FOOD_PRIMARY = Internal.createUniqueKey(FoodTable.XD_FOOD, "KEY_xd_food_PRIMARY", FoodTable.XD_FOOD.FOOD_ID);
        public static final UniqueKey<FoodRecord> KEY_XD_FOOD_FD_FOOD_FOOD_ID_UINDEX = Internal.createUniqueKey(FoodTable.XD_FOOD, "KEY_xd_food_fd_food_food_id_uindex", FoodTable.XD_FOOD.FOOD_ID);
        public static final UniqueKey<OrderRecord> KEY_XD_ORDER_PRIMARY = Internal.createUniqueKey(OrderTable.XD_ORDER, "KEY_xd_order_PRIMARY", OrderTable.XD_ORDER.ORDER_ID);
        public static final UniqueKey<OrderRecord> KEY_XD_ORDER_XD_ORDER_ORDER_ID_UINDEX = Internal.createUniqueKey(OrderTable.XD_ORDER, "KEY_xd_order_xd_order_order_id_uindex", OrderTable.XD_ORDER.ORDER_ID);
        public static final UniqueKey<OrderFoodRecord> KEY_XD_ORDER_FOOD_PRIMARY = Internal.createUniqueKey(OrderFoodTable.XD_ORDER_FOOD, "KEY_xd_order_food_PRIMARY", OrderFoodTable.XD_ORDER_FOOD.ORDER_FOOD_ID);
        public static final UniqueKey<OrderFoodRecord> KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_FOOD_ID_UINDEX = Internal.createUniqueKey(OrderFoodTable.XD_ORDER_FOOD, "KEY_xd_order_food_xd_order_food_order_food_id_uindex", OrderFoodTable.XD_ORDER_FOOD.ORDER_FOOD_ID);
        public static final UniqueKey<OrderFoodRecord> KEY_XD_ORDER_FOOD_XD_ORDER_FOOD_ORDER_ID_UINDEX = Internal.createUniqueKey(OrderFoodTable.XD_ORDER_FOOD, "KEY_xd_order_food_xd_order_food_order_id_uindex", OrderFoodTable.XD_ORDER_FOOD.ORDER_ID);
        public static final UniqueKey<RestaurantRecord> KEY_XD_RESTAURANT_PRIMARY = Internal.createUniqueKey(RestaurantTable.XD_RESTAURANT, "KEY_xd_restaurant_PRIMARY", RestaurantTable.XD_RESTAURANT.REST_ID);
        public static final UniqueKey<RestaurantRecord> KEY_XD_RESTAURANT_FD_RESTAURANT_REST_ID_UINDEX = Internal.createUniqueKey(RestaurantTable.XD_RESTAURANT, "KEY_xd_restaurant_fd_restaurant_rest_id_uindex", RestaurantTable.XD_RESTAURANT.REST_ID);
        public static final UniqueKey<UserRecord> KEY_XD_USER_PRIMARY = Internal.createUniqueKey(UserTable.XD_USER, "KEY_xd_user_PRIMARY", UserTable.XD_USER.USER_ID);
        public static final UniqueKey<UserRecord> KEY_XD_USER_XD_USER_USER_ID_UINDEX = Internal.createUniqueKey(UserTable.XD_USER, "KEY_xd_user_xd_user_user_id_uindex", UserTable.XD_USER.USER_ID);
        public static final UniqueKey<UserRecord> KEY_XD_USER_XD_USER_USERNAME_UINDEX = Internal.createUniqueKey(UserTable.XD_USER, "KEY_xd_user_xd_user_username_uindex", UserTable.XD_USER.USERNAME);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<FoodRecord, RestaurantRecord> FD_FOOD_FD_RESTAURANT_REST_ID_FK = Internal.createForeignKey(mathias.vanhack.skip.model.definitions.Keys.KEY_XD_RESTAURANT_PRIMARY, FoodTable.XD_FOOD, "fd_food_fd_restaurant_rest_id_fk", FoodTable.XD_FOOD.REST_ID);
        public static final ForeignKey<OrderRecord, UserRecord> XD_ORDER_XD_USER_USER_ID_FK = Internal.createForeignKey(mathias.vanhack.skip.model.definitions.Keys.KEY_XD_USER_PRIMARY, OrderTable.XD_ORDER, "xd_order_xd_user_user_id_fk", OrderTable.XD_ORDER.USER_ID);
        public static final ForeignKey<OrderRecord, RestaurantRecord> XD_ORDER_XD_RESTAURANT_REST_ID_FK = Internal.createForeignKey(mathias.vanhack.skip.model.definitions.Keys.KEY_XD_RESTAURANT_PRIMARY, OrderTable.XD_ORDER, "xd_order_xd_restaurant_rest_id_fk", OrderTable.XD_ORDER.REST_ID);
        public static final ForeignKey<OrderFoodRecord, OrderRecord> XD_ORDER_FOOD_XD_ORDER_ORDER_ID_FK = Internal.createForeignKey(mathias.vanhack.skip.model.definitions.Keys.KEY_XD_ORDER_PRIMARY, OrderFoodTable.XD_ORDER_FOOD, "xd_order_food_xd_order_order_id_fk", OrderFoodTable.XD_ORDER_FOOD.ORDER_ID);
        public static final ForeignKey<OrderFoodRecord, FoodRecord> XD_ORDER_FOOD_XD_FOOD_FOOD_ID_FK = Internal.createForeignKey(mathias.vanhack.skip.model.definitions.Keys.KEY_XD_FOOD_PRIMARY, OrderFoodTable.XD_ORDER_FOOD, "xd_order_food_xd_food_food_id_fk", OrderFoodTable.XD_ORDER_FOOD.FOOD_ID);
    }
}
